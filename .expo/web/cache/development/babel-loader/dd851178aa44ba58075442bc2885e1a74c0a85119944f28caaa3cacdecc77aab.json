{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { multiplyTwo as _multiplyTwo } from \"../src/redux\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TwoContainer = function TwoContainer(props) {\n  var dispatch = useDispatch();\n  var handlepress = function handlepress() {\n    console.log(\"here\");\n    dispatch(_multiplyTwo);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"TwoContainer\"\n    }), _jsx(Text, {\n      children: props.val_two\n    }), _jsx(Button, {\n      onPress: props.multiplyFive,\n      children: _jsx(Text, {\n        children: \"Multiply by 2\"\n      })\n    })]\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    val_two: state.two.val_two\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    multiplyTwo: function multiplyTwo() {\n      return dispatch(_multiplyTwo());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TwoContainer);\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["connect","React","multiplyTwo","useSelector","useDispatch","jsx","_jsx","jsxs","_jsxs","TwoContainer","props","dispatch","handlepress","console","log","View","children","Text","val_two","Button","onPress","multiplyFive","mapStateToProps","state","two","mapDispatchToProps","styles","StyleSheet","create"],"sources":["C:/Users/anvesh.akkati/reduxmreducers/components/TwoContainer.js"],"sourcesContent":["import { StyleSheet, Text,Button, View } from 'react-native'\r\nimport { connect } from 'react-redux';\r\nimport React from 'react'\r\nimport { multiplyTwo } from '../src/redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst TwoContainer = (props) => {\r\n    const dispatch = useDispatch();\r\n    //const val_two = useSelector((state) => state.two.val_two);\r\n\r\n    const handlepress=()=>{\r\n        console.log(\"here\")\r\n        dispatch(multiplyTwo)\r\n    }\r\n  return (\r\n    <View>\r\n      <Text>TwoContainer</Text>\r\n      <Text>{props.val_two}</Text>\r\n      <Button onPress={props.multiplyFive}><Text>Multiply by 2</Text></Button>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tval_two: state.two.val_two\r\n\t}\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tmultiplyTwo: () => dispatch(multiplyTwo())\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(TwoContainer);\r\n\r\nconst styles = StyleSheet.create({})"],"mappings":";;;;AACA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,IAAXA,YAAW;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACvD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;EAC5B,IAAMC,QAAQ,GAAGP,WAAW,EAAE;EAG9B,IAAMQ,WAAW,GAAC,SAAZA,WAAWA,CAAA,EAAK;IAClBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBH,QAAQ,CAACT,YAAW,CAAC;EACzB,CAAC;EACH,OACEM,KAAA,CAACO,IAAI;IAAAC,QAAA,GACHV,IAAA,CAACW,IAAI;MAAAD,QAAA,EAAC;IAAY,EAAO,EACzBV,IAAA,CAACW,IAAI;MAAAD,QAAA,EAAEN,KAAK,CAACQ;IAAO,EAAQ,EAC5BZ,IAAA,CAACa,MAAM;MAACC,OAAO,EAAEV,KAAK,CAACW,YAAa;MAAAL,QAAA,EAACV,IAAA,CAACW,IAAI;QAAAD,QAAA,EAAC;MAAa;IAAO,EAAS;EAAA,EACnE;AAEX,CAAC;AAED,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,KAAK,EAAI;EAChC,OAAO;IACNL,OAAO,EAAEK,KAAK,CAACC,GAAG,CAACN;EACpB,CAAC;AACF,CAAC;AAGD,IAAMO,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAGd,QAAQ,EAAI;EACtC,OAAO;IACNT,WAAW,EAAE,SAAAA,YAAA;MAAA,OAAMS,QAAQ,CAACT,YAAW,EAAE,CAAC;IAAA;EAC3C,CAAC;AACF,CAAC;AAED,eAAeF,OAAO,CACrBsB,eAAe,EACfG,kBAAkB,CAClB,CAAChB,YAAY,CAAC;AAEf,IAAMiB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}