{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar initialState = {\n  count: 0\n};\nvar Tworeducer = function Tworeducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'MULTIPLY_TWO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n    case 'MULTIPLY_FIVE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 2\n      });\n    default:\n      return state;\n  }\n};\nexport default Tworeducer;","map":{"version":3,"names":["initialState","count","Tworeducer","state","arguments","length","undefined","action","type","_objectSpread"],"sources":["C:/Users/anvesh.akkati/reduxmreducers/redux/reducers/tworeducer.js"],"sourcesContent":["const initialState={\r\n    count:0,\r\n}\r\nconst Tworeducer=(state= initialState, action)=>{\r\n    switch(action.type){\r\n        case 'MULTIPLY_TWO':\r\n            return{\r\n                ...state,\r\n                count: state.count+1,\r\n            }  \r\n        case 'MULTIPLY_FIVE':\r\n            return{\r\n                ...state,\r\n                count:state.count+2,\r\n            }    \r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default Tworeducer"],"mappings":";;;AAAA,IAAMA,YAAY,GAAC;EACfC,KAAK,EAAC;AACV,CAAC;AACD,IAAMC,UAAU,GAAC,SAAXA,UAAUA,CAAA,EAAgC;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAEJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,OAAAC,aAAA,CAAAA,aAAA,KACON,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAC;MAAC;IAE5B,KAAK,eAAe;MAChB,OAAAQ,aAAA,CAAAA,aAAA,KACON,KAAK;QACRF,KAAK,EAACE,KAAK,CAACF,KAAK,GAAC;MAAC;IAEvB;MACI,OAAOE,KAAK;EAAC;AAE7B,CAAC;AACD,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}